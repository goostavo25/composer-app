{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../composer.service\";\nexport let ComposerDetailsComponent = /*#__PURE__*/(() => {\n  class ComposerDetailsComponent {\n    //Pass ActivatedRoute into constructor\n    constructor(route, composerService) {\n      this.route = route;\n      this.composerService = composerService;\n      this.composerId = parseInt(this.route.snapshot.paramMap.get('composerId'), 10); //If composerId is valid\n\n      if (this.composerId) {\n        //Get Composer\n        this.composer = this.composerService.getComposer(this.composerId);\n      }\n    }\n\n    ngOnInit() {}\n\n  }\n\n  ComposerDetailsComponent.ɵfac = function ComposerDetailsComponent_Factory(t) {\n    return new (t || ComposerDetailsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ComposerService));\n  };\n\n  ComposerDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ComposerDetailsComponent,\n    selectors: [[\"app-composer-details\"]],\n    decls: 12,\n    vars: 3,\n    consts: [[1, \"row\"], [1, \"col-sm-12\"], [1, \"list-group\"], [1, \"list-group-item\"], [\"routerLink\", \"/composer-list\", 1, \"float-right\"]],\n    template: function ComposerDetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"ul\", 2);\n        i0.ɵɵelementStart(3, \"li\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"li\", 3);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"li\", 3);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelementStart(10, \"a\", 4);\n        i0.ɵɵtext(11, \"Return to Composers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"Composer ID: \", ctx.composer.composerId, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Full name: \", ctx.composer.fullName, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Genre: \", ctx.composer.genre, \"\");\n      }\n    },\n    directives: [i1.RouterLinkWithHref],\n    styles: [\"\"]\n  });\n  return ComposerDetailsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}