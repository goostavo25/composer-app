{"ast":null,"code":"import { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let ComposerService = /*#__PURE__*/(() => {\n  class ComposerService {\n    //Constructor with composerId, fullName and genre.\n    constructor() {\n      //List of composers from composer-list.\n      this.composers = [{\n        composerId: 100,\n        fullName: 'Simon Diaz',\n        genre: 'Flokloric'\n      }, {\n        composerId: 101,\n        fullName: 'Juan Vicente Torrealba',\n        genre: 'Popular'\n      }, {\n        composerId: 102,\n        fullName: 'Ali Primera',\n        genre: 'Popular'\n      }, {\n        composerId: 103,\n        fullName: 'Lasso',\n        genre: 'Popular'\n      }, {\n        composerId: 104,\n        fullName: 'Gustavo Dudamel',\n        genre: 'Classical'\n      }];\n    }\n\n    filterComposers(name) {\n      return of(this.composers).pipe(map(composers => composers.filter(composer => composer.fullName.toLowerCase().indexOf(name) > -1)));\n    } //Create getComposers function\n\n\n    getComposers() {\n      return of(this.composers);\n    }\n\n    getComposer(composerId) {\n      for (let composer of this.composers) {\n        if (composer.composerId === composerId) {\n          return composer;\n        }\n      }\n\n      return {};\n    }\n\n  }\n\n  ComposerService.ɵfac = function ComposerService_Factory(t) {\n    return new (t || ComposerService)();\n  };\n\n  ComposerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ComposerService,\n    factory: ComposerService.ɵfac,\n    providedIn: 'root'\n  });\n  return ComposerService;\n})();","map":null,"metadata":{},"sourceType":"module"}